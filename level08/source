#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#include <stdint.h>

char *auth;
char *service;

int	main() {
	char buf[80]; //size of buf i actually dont know

	while (1) { // Can replace the while(true) else->break, with a do-while
		printf("%p %p \n", auth, service);
		if (fgets(buf, 80, stdin)) {

			int32_t ecx = 5;
			char *esi = buf;
			char *edi = "auth ";
			while (*esi == *edi && ecx > 0) {
				esi++;
				edi++;
				ecx--;
			}
			uint8_t dl = *esi > *edi;
			uint8_t al = *esi < *edi;

			if (!(dl - al)) {
				auth = malloc(4);
				*auth = 0;
				ecx = -1;
				edi = buf+5;
				while (buf+5) {
					ecx--;
				}
				ecx--;
				if (ecx < 31) {
					strcpy(auth, buf+5);
				}
			}

			ecx = 5;
			*esi = buf;
			*edi = "reset";
			while (*esi == *edi && ecx > 0) {
				esi++;
				edi++;
				ecx--;
			}
			dl = *esi > *edi;
			al = *esi < *edi;

			if (!(dl - al)) {
				free(auth);
			}

			ecx = 6;
			*esi = buf;
			*edi = "service";
			while (*esi == *edi && ecx > 0) {
				esi++;
				edi++;
				ecx--;
			}
			dl = *esi > *edi;
			al = *esi < *edi;

			if (!(dl - al)) {
				service = strdup(buf + 7);
			}

			ecx = 5;
			*esi = buf;
			*edi = "login";
			while (*esi == *edi && ecx > 0) {
				esi++;
				edi++;
				ecx--;
			}
			dl = *esi > *edi;
			al = *esi < *edi;

			if (!(dl - al)) {
				if (!(auth+32))
					fwrite("Password:\n", 1, 10, stdout);
				else
					system("/bin/sh");
			}
		}
		else
			return 0;
	}
	return 0;
}
